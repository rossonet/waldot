buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
}


description = "WaldOT API"
group = 'net.rossonet.waldot'
version = "${rootProject.version}"

ext {
    sourceCompatibility = 21
    targetCompatibility = 21
    ossrhPassword = System.getenv('OSSRH_PASSWORD')
    ossrhUsername = System.getenv('OSSRH_USERNAME')
}

repositories {
    mavenCentral()
    maven {
       url "https://repo.craftyn.com/repository/snapshots/" 
    }
    maven { url 'https://jitpack.io' }
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'distribution'
apply plugin: 'signing'
apply plugin: 'maven-publish'

dependencies {
    compileOnly project(':waldot-deps')
    annotationProcessor group: 'org.apache.tinkerpop', name: 'gremlin-annotations', version: '3.7.3'
    testImplementation group: 'com.ginsberg', name: 'junit5-system-exit', version: '2.0.2'
    testImplementation group: 'com.google.inject', name: 'guice', version: '7.0.0'
    testImplementation(platform('org.junit:junit-bom:5.13.1'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

task eclipseClosedDependencies {}

task eclipseClosedDependencies_ {}

compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs.addAll(['-XprintProcessorInfo'])
}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

task view { doLast { println "Working on project ${project.name} [ ${project.description} ]" } }

jar {
    enabled = true
}

jar.doLast { task ->
	ant.checksum file: task.archivePath
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

javadoc{
    destinationDir = file("${project.buildDir}/docs/javadoc/${project.name}/")
    failOnError=false
}

publishing {
  publications {
    mavenJava(MavenPublication){
      artifactId = "${project.name}"
      from components.java
      versionMapping {
        usage('java-api') {
          fromResolutionOf('runtimeClasspath')
        }
        usage('java-runtime') {
          fromResolutionResult()
        }
      }
      pom {
        name = "${project.name}"
        description = "${project.description}"
        url = 'https://www.rossonet.net/'
        licenses {
          license {
            name = 'Apache-2.0 license'
            url = 'https://www.apache.org/licenses/LICENSE-2.0'
          }
        }
        developers {
          developer {
            id = 'ar4k'
            name = 'Andrea Ambrosini'
            email = 'andrea.ambrosini@rossonet.com'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/rossonet/waldot.git'
          developerConnection = 'scm:git:ssh://github.com:rossonet/waldot.git'
          url = 'https://github.com/rossonet/waldot/tree/master'
        }
      }
    }
  }
  repositories {
    maven {
      url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      name = "sonatype"
      credentials {
        username "${project.ext.ossrhUsername}"
        password "${project.ext.ossrhPassword}"
      }
    }
  }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

signing {
    sign publishing.publications.mavenJava
}
